SOURCE_IMAGE = os.getenv("SOURCE_IMAGE", default='SOURCE-IMAGE')
LOCAL_PATH = os.getenv("LOCAL_PATH", default='.')
NAMESPACE = os.getenv("NAMESPACE", default='default')

k8s_custom_deploy(
   'newsletter-subscription',
   apply_cmd="tanzu apps workload apply -f config/workload.yaml --live-update --debug=true" +
       " --local-path " + LOCAL_PATH +
       " --source-image " + SOURCE_IMAGE +
       " --namespace " + NAMESPACE +
       " --yes >/dev/null" +
       " && kubectl get workload newsletter-subscription --namespace " + NAMESPACE + " -o yaml",
   delete_cmd="tanzu apps workload delete -f config/workload.yaml --namespace " + NAMESPACE + " --yes" ,
   deps=['pom.xml', './target/classes'],
   container_selector='workload',
   live_update=[
       sync('./target/classes', '/workspace/BOOT-INF/classes')
   ]
)

k8s_resource('newsletter-subscription', port_forwards=["8080:8080"],
   extra_pod_selectors=[{'carto.run/workload-name': 'newsletter-subscription', 'app.kubernetes.io/component': 'run'}])
allow_k8s_contexts('tdh-vsphere-sadubois-tap')
allow_k8s_contexts('tdh-vsphere-sadubois-tap-admin@tdh-vsphere-sadubois-tap')
allow_k8s_contexts('tdh-vsphere-11766-sadubois-tap-admin@tdh-vsphere-11766-sadubois-tap')
allow_k8s_contexts('tdh-vsphere-tkgs-sdubois-dev-admin@tdh-vsphere-tkgs-sdubois-dev')
allow_k8s_contexts('tdh-azure-aks-sdubois-dev-admin')